{"version":3,"sources":["logo_light.png","logo_dark.png","components/header.js","components/footer.js","components/cards/pricecard.js","components/cards/volumecard.js","components/cards/mkcapcard.js","components/cards/circulatingcard.js","components/cards/farmstvlcard.js","components/cards/lptvlcard.js","pages/home.js","pages/topholders.js","pages/liquiditypools.js","pages/farmingpools.js","pages/address.js","index.js"],"names":["Header","useDisclosure","isOpen","onOpen","onClose","bg","useColorModeValue","px","h","alignItems","justifyContent","size","icon","display","md","onClick","w","src","lightLogo","darkLogo","alt","base","as","spacing","py","rounded","_hover","textDecoration","href","colorScheme","placeholder","maxW","pb","Footer","gitInfo","useColorMode","colorMode","toggleColorMode","className","role","mx","minWidth","templateRows","templateColumns","row","colSpan","fontSize","column","alignSelf","justifySelf","commit","hash","slice","boxSize","PriceCard","useState","price","setPrice","priceChange","setPriceChange","useEffect","a","fetch","json","response","fetchData","borderWidth","borderRadius","m","Intl","NumberFormat","format","type","VolumeCard","volume","setVolume","MarketcapCard","mkcap","setMkcap","mkcapchange","setMkcapChange","CirculatingCard","cirsupply","setCirsupply","web3","Web3","providers","HttpProvider","BOND_contract_address","SWINGBY_contract_address","XYZ_contract_address","farmsContract","eth","Contract","farms_contract_abi","FarmsTVLCard","bondTokens","setBondTokens","swingbyTokens","setSwingbyToken","xyzTokens","setXyzTokens","epoch","setEpoch","methods","getCurrentEpoch","call","currentEpoch","getEpochPoolSize","bondAmount","swingbyAmount","xyzAmount","p","slp_contract_address","usdcContract","usdc_contract_abi","LPTVLCard","tvlUsdcSLP","setTvlUsdcSLP","balanceOf","usdcVal","Home","mt","col","entry","_address","_wallet","_govstaking","_govunclaimed","_farmunclaimed","_airdropunclaimed","_total","isNumeric","Topholders","variant","Liquiditypools","Farmingpools","Address","Snowflakes","color","count","maxSize","start","ReactDOM","render","exact","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.0343d7be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_light.5fb59b75.png\";","export default __webpack_public_path__ + \"static/media/logo_dark.0ca420e1.png\";","import {\n  Box,\n  Flex,\n  HStack,\n  Link,\n  useColorModeValue,\n  Input,\n  Badge,\n  Image,\n  useDisclosure,\n  IconButton,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport lightLogo from \"./../logo_light.png\";\nimport darkLogo from \"./../logo_dark.png\";\n\nexport default function Header() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <Box bg={useColorModeValue(\"gray.100\", \"gray.900\")} px={4}>\n        <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <IconButton\n            size={\"md\"}\n            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n            aria-label={\"Open Menu\"}\n            display={{ md: \"none\" }}\n            onClick={isOpen ? onClose : onOpen}\n          />\n\n          <HStack alignItems={\"center\"}>\n            <Box w=\"2rem\">\n              <Image src={useColorModeValue(lightLogo, darkLogo)} alt=\"logo\" />\n            </Box>\n            <Box display={{ base: \"none\", md: \"flex\" }}>\n              StakeborgDAO Explorer\n            </Box>\n            <HStack\n              as={\"nav\"}\n              spacing={2}\n              display={{ base: \"none\", md: \"flex\" }}\n              px={8}\n            >\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                href={\"#/\"}\n              >\n                Home\n              </Link>\n\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                href={\"#/topholders\"}\n              >\n                Top Holders\n              </Link>\n\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                //href={\"/liquiditypools\"}\n              >\n                Liquidity Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                //href={\"/farmingpools\"}\n              >\n                Farming Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n            </HStack>\n          </HStack>\n\n          <HStack>\n            <Input placeholder=\"0xdeadbeef\" maxW=\"40rem\" />\n          </HStack>\n        </Flex>\n        {isOpen ? (\n          <Box pb={4} display={{ md: \"none\" }}>\n            <Stack as={\"nav\"} spacing={4}>\n              <Link href={\"#/\"}>Home</Link>\n\n              <Link href={\"#/topholders\"}>Top Holders</Link>\n\n              <Link /* href={\"#/liquiditypools\"} */>\n                Liquidity Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n\n              <Link /* href={\"#/farmingpools\"} */>\n                Farming Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n    </>\n  );\n}\n","import {\n  Stat,\n  StatHelpText,\n  Image,\n  Center,\n  Box,\n  Button,\n  useColorMode,\n  Grid,\n  GridItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport GitInfo from \"react-git-info/macro\";\n\nfunction Footer() {\n  const gitInfo = GitInfo();\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <Box\n      className=\"footer\"\n      as=\"footer\"\n      role=\"contentinfo\"\n      mx=\"auto\"\n      py=\"6\"\n      px={{ base: \"4\", md: \"8\" }}\n      minWidth=\"100vw\"\n    >\n      <Grid templateRows=\"repeat(2,auto)\" templateColumns=\"repeat(3,auto)\">\n        <GridItem row=\"1\" colSpan=\"3\">\n          <Text fontSize=\"sm\">0x7a3A59fC82ed8c2b1a4259f2DFA9a984527D8F04</Text>\n        </GridItem>\n        <GridItem row=\"2\" column=\"1\" alignSelf=\"end\" justifySelf=\"start\">\n          <Text fontSize=\"sm\">build : {gitInfo.commit.hash.slice(-6)}</Text>\n        </GridItem>\n        <GridItem row=\"2\" column=\"2\">\n          <Stat>\n            <StatHelpText fontSize=\"sm\">\n              Like this app? Consider supporting me at the address above. It\n              will help improve this app and build other apps for the\n              StakeborgDAO community.\n            </StatHelpText>\n\n            <Center>\n              <Image\n                boxSize=\"25px\"\n                src=\"https://assets.coingecko.com/coins/images/12559/small/coin-round-red.png?1604021818\"\n                alt=\"img\"\n              />\n              <Image\n                boxSize=\"30px\"\n                src=\"https://assets.coingecko.com/coins/images/279/small/ethereum.png?1595348880\"\n                alt=\"img\"\n              />\n              <Image\n                boxSize=\"25px\"\n                src=\"https://assets.coingecko.com/coins/images/4713/small/matic-token-icon.png?1624446912\"\n                alt=\"img\"\n              />\n            </Center>\n          </Stat>\n        </GridItem>\n        <GridItem row=\"2\" column=\"3\" alignSelf=\"end\" justifySelf=\"end\">\n          <Button onClick={toggleColorMode} maxW=\"3rem\">\n            {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n          </Button>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Footer;\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatArrow,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function PriceCard() {\n  const [price, setPrice] = useState(0);\n  const [priceChange, setPriceChange] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setPrice(response[\"market_data\"][\"current_price\"][\"usd\"]);\n      setPriceChange(\n        response[\"market_data\"][\"price_change_percentage_1h_in_currency\"][\"usd\"]\n      );\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>Current Price</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(price)} $</StatNumber>\n          {priceChange > 0 ? (\n            <StatArrow type=\"increase\" />\n          ) : (\n            <StatArrow type=\"decrease\" />\n          )}\n          {new Intl.NumberFormat().format(priceChange)} %\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function VolumeCard() {\n  const [volume, setVolume] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setVolume(response[\"market_data\"][\"total_volume\"][\"usd\"]);\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>24 Hours Volume</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(volume)} $</StatNumber>\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatArrow,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function MarketcapCard() {\n  const [mkcap, setMkcap] = useState(0);\n  const [mkcapchange, setMkcapChange] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setMkcap(response[\"market_data\"][\"market_cap\"][\"usd\"]);\n      setMkcapChange(\n        response[\"market_data\"][\"market_cap_change_percentage_24h_in_currency\"][\n          \"usd\"\n        ]\n      );\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>Market Cap</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(mkcap)} $</StatNumber>\n          {mkcapchange > 0 ? (\n            <StatArrow type=\"increase\" />\n          ) : (\n            <StatArrow type=\"decrease\" />\n          )}\n          {new Intl.NumberFormat().format(mkcapchange)} %\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function CirculatingCard() {\n  const [cirsupply, setCirsupply] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setCirsupply(response[\"market_data\"][\"circulating_supply\"]);\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>Circulating Supply</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(cirsupply)}</StatNumber>\n          tokens\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatGroup,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport farms_contract_abi from \"./../../abi/farms.json\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(\n  new Web3.providers.HttpProvider(\n    \"https://mainnet.infura.io/v3/6a64571b9f134bc1913c6c24d5698891\"\n  )\n);\n\nconst farms_contract_address = \"0x7F4FE6776a9617847485d43db0d3A9b734e459C5\";\n\nconst BOND_contract_address = \"0x0391D2021f89DC339F60Fff84546EA23E337750f\";\nconst SWINGBY_contract_address = \"0x8287c7b963b405b7b8d467db9d79eec40625b13a\";\nconst XYZ_contract_address = \"0x618679df9efcd19694bb1daa8d00718eacfa2883\";\n\nconst farmsContract = new web3.eth.Contract(\n  farms_contract_abi,\n  farms_contract_address\n);\n\nexport default function FarmsTVLCard() {\n  const [bondTokens, setBondTokens] = useState(0);\n  const [swingbyTokens, setSwingbyToken] = useState(0);\n  const [xyzTokens, setXyzTokens] = useState(0);\n  const [epoch, setEpoch] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      const currentEpoch = await farmsContract.methods.getCurrentEpoch().call();\n\n      setEpoch(currentEpoch);\n\n      const bondAmount = await farmsContract.methods\n        .getEpochPoolSize(BOND_contract_address, currentEpoch)\n        .call();\n      const swingbyAmount = await farmsContract.methods\n        .getEpochPoolSize(SWINGBY_contract_address, currentEpoch)\n        .call();\n      const xyzAmount = await farmsContract.methods\n        .getEpochPoolSize(XYZ_contract_address, currentEpoch)\n        .call();\n\n      setBondTokens(bondAmount / 1000000000000000000);\n\n      setSwingbyToken(swingbyAmount / 1000000000000000000);\n\n      setXyzTokens(xyzAmount / 1000000000000000000);\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <StatGroup>\n          <Stat p={4}>\n            <StatLabel>BOND</StatLabel>\n            <StatHelpText>epoch {epoch}</StatHelpText>\n            <StatNumber>\n              {new Intl.NumberFormat().format(bondTokens)}\n            </StatNumber>\n          </Stat>\n          <Stat p={4}>\n            <StatLabel>SWINGBY</StatLabel>\n            <StatHelpText>epoch {epoch}</StatHelpText>\n            <StatNumber>\n              {new Intl.NumberFormat().format(swingbyTokens)}\n            </StatNumber>\n          </Stat>\n          <Stat p={4}>\n            <StatLabel>XYZ </StatLabel>\n            <StatHelpText>epoch {epoch}</StatHelpText>\n            <StatNumber>{new Intl.NumberFormat().format(xyzTokens)}</StatNumber>\n          </Stat>\n        </StatGroup>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport usdc_contract_abi from \"./../../abi/usdc.json\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(\n  new Web3.providers.HttpProvider(\n    \"https://mainnet.infura.io/v3/6a64571b9f134bc1913c6c24d5698891\"\n  )\n);\n\nconst slp_contract_address = \"0xf1e34d19f63b69eaa70952f2f64f735849959833\";\nconst usdc_contract_address = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\n\nconst usdcContract = new web3.eth.Contract(\n  usdc_contract_abi,\n  usdc_contract_address\n);\nexport default function LPTVLCard() {\n  const [tvlUsdcSLP, setTvlUsdcSLP] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      const usdcVal = await usdcContract.methods\n        .balanceOf(slp_contract_address)\n        .call();\n      setTvlUsdcSLP((usdcVal / 1000000) * 2);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>USDC LP</StatLabel>\n          <StatHelpText>total locked value</StatHelpText>\n          <StatNumber>\n            {new Intl.NumberFormat().format(tvlUsdcSLP)} $\n          </StatNumber>\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport PriceCard from \"../components/cards/pricecard\";\nimport VolumeCard from \"../components/cards/volumecard\";\nimport MarketcapCard from \"../components/cards/mkcapcard\";\nimport CirculatingCard from \"../components/cards/circulatingcard\";\nimport FarmsTVLCard from \"../components/cards/farmstvlcard\";\nimport LPTVLCard from \"../components/cards/lptvlcard\";\nimport { Box, Container, Grid, GridItem, Text } from \"@chakra-ui/react\";\n\nfunction Home() {\n  return (\n    <Box className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\" maxW=\"50rem\">\n        <Text fontSize=\"3xl\">Statistics for the $STANDARD token</Text>\n        <Grid\n          templateRows=\"repeat(4, auto)\"\n          templateColumns=\"repeat(2, 1fr)\"\n          alignItems=\"stretch\"\n          mt=\"2rem\"\n        >\n          <GridItem row={1} col={1} m=\"1\">\n            <PriceCard />\n          </GridItem>\n          <GridItem row={1} col={2} m=\"1\">\n            <VolumeCard />\n          </GridItem>\n          <GridItem row={2} col={1} m=\"1\">\n            <MarketcapCard />\n          </GridItem>\n          <GridItem row={2} col={2} m=\"1\">\n            <CirculatingCard />\n          </GridItem>\n          <GridItem row={3} colSpan={2} m=\"1\">\n            <FarmsTVLCard />\n          </GridItem>\n          <GridItem row={4} colSpan={2} m=\"1\">\n            <LPTVLCard />\n          </GridItem>\n        </Grid>\n      </Container>\n      <Footer />\n    </Box>\n  );\n}\n\nexport default Home;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport {\n  Table,\n  Tr,\n  Th,\n  Thead,\n  Tbody,\n  Td,\n  Container,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nfunction entry(\n  _address,\n  _wallet,\n  _govstaking,\n  _govunclaimed,\n  _farmunclaimed,\n  _airdropunclaimed,\n  _total\n) {\n  return (\n    <Tr>\n      <Td>{_address}</Td>\n      <Td isNumeric>{_wallet}</Td>\n      <Td isNumeric>{_govstaking}</Td>\n      <Td isNumeric>{_govunclaimed}</Td>\n      <Td isNumeric>{_farmunclaimed}</Td>\n      <Td isNumeric>{_airdropunclaimed}</Td>\n      <Td isNumeric>{_total}</Td>\n    </Tr>\n  );\n}\n\nfunction Topholders() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\" maxW=\"80rem\">\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n        >\n          <Box m=\"3\">\n            <Table variant=\"simple\">\n              <Thead>\n                <Tr>\n                  <Th>Address</Th>\n                  <Th isNumeric>Wallet</Th>\n                  <Th isNumeric>Governance staking</Th>\n                  <Th isNumeric>Governance unclaimed</Th>\n                  <Th isNumeric>Farming unclaimed</Th>\n                  <Th isNumeric>Airdrop unclaimed</Th>\n                  <Th isNumeric>Total</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {entry(\"0xdead\", 123, 123, 123, 123, 123, 123, 999)}\n                {entry(\"0xbeef\", 321, 321, 321, 321, 321, 321, 888)}\n              </Tbody>\n            </Table>\n          </Box>\n        </Box>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Topholders;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport { Container } from \"@chakra-ui/react\";\nfunction Liquiditypools() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\">Liquidity pools</Container>{\" \"}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Liquiditypools;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport { Container } from \"@chakra-ui/react\";\n\nfunction Farmingpools() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\">Farming pools</Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Farmingpools;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport {\n  Container,\n  Box,\n  useColorModeValue,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n} from \"@chakra-ui/react\";\n\nfunction Address() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\" maxW=\"70vw\">\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n        >\n          <Box m=\"3\">\n            <Stat>\n              <StatHelpText>Holdings of </StatHelpText>\n              <StatNumber>0xdeadbeef</StatNumber>\n              <StatLabel mt=\"2rem\">Wallet</StatLabel>\n              <StatNumber>123</StatNumber>\n              <StatLabel>Governance staking</StatLabel>\n              <StatNumber>123</StatNumber>\n              <StatLabel>Governance unclaimed rewards</StatLabel>\n              <StatNumber>123</StatNumber>\n              <StatLabel>Farming unclaimed rewards</StatLabel>\n              <StatNumber>123</StatNumber>\n              <StatLabel>Airdrop unclaimed rewards</StatLabel>\n              <StatNumber>123</StatNumber>\n              <StatLabel mt=\"2rem\">Total</StatLabel>\n              <StatNumber>123</StatNumber>\n            </Stat>\n          </Box>\n        </Box>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Address;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./pages/home\";\nimport Topholders from \"./pages/topholders\";\nimport Liquiditypools from \"./pages/liquiditypools\";\nimport Farmingpools from \"./pages/farmingpools\";\nimport Address from \"./pages/address\";\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Snowflakes from \"magic-snowflakes\";\nconst snowflakes = new Snowflakes({ color: \"#a4e1f4\", count: 25, maxSize: 15 });\n\nsnowflakes.start();\nReactDOM.render(\n  <ChakraProvider>\n    <HashRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route path=\"/address\" element={<Address />} />\n        <Route path=\"/topholders\" element={<Topholders />} />\n        <Route path=\"/liquiditypools\" element={<Liquiditypools />} />\n        <Route path=\"/farmingpools\" element={<Farmingpools />} />\n      </Routes>\n    </HashRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}