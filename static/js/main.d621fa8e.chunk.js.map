{"version":3,"sources":["logo_light.png","logo_dark.png","components/header.js","components/footer.js","components/cards/pricecard.js","components/cards/volumecard.js","components/cards/mkcapcard.js","components/cards/circulatingcard.js","components/cards/farmstvlcard.js","components/cards/lptvlcard.js","pages/home.js","pages/topholders.js","pages/liquiditypools.js","pages/farmingpools.js","pages/address.js","index.js"],"names":["Header","navigate","useNavigate","useDisclosure","isOpen","onOpen","onClose","useState","value","setValue","bg","useColorModeValue","px","h","alignItems","justifyContent","size","icon","display","md","onClick","w","src","lightLogo","darkLogo","alt","base","as","spacing","py","rounded","_hover","textDecoration","href","colorScheme","onSubmit","e","preventDefault","placeholder","maxW","onChange","currentTarget","type","pb","Footer","gitInfo","useColorMode","colorMode","toggleColorMode","className","role","mx","minWidth","templateRows","templateColumns","row","colSpan","fontSize","column","alignSelf","justifySelf","commit","hash","slice","boxSize","PriceCard","price","setPrice","priceChange","setPriceChange","useEffect","a","fetch","json","response","fetchData","borderWidth","borderRadius","m","Intl","NumberFormat","format","VolumeCard","volume","setVolume","MarketcapCard","mkcap","setMkcap","mkcapchange","setMkcapChange","CirculatingCard","cirsupply","setCirsupply","web3","Web3","providers","HttpProvider","BOND_contract_address","SWINGBY_contract_address","XYZ_contract_address","farmsContract","eth","Contract","farms_contract_abi","FarmsTVLCard","bondTokens","setBondTokens","swingbyTokens","setSwingbyToken","xyzTokens","setXyzTokens","epoch","setEpoch","methods","getCurrentEpoch","call","currentEpoch","getEpochPoolSize","bondAmount","swingbyAmount","xyzAmount","p","slp_contract_address","usdcContract","usdc_contract_abi","LPTVLCard","tvlUsdcSLP","setTvlUsdcSLP","balanceOf","usdcVal","Home","mt","col","entry","_address","_wallet","_govstaking","_govunclaimed","_farmunclaimed","_airdropunclaimed","_total","isNumeric","Topholders","variant","Liquiditypools","Farmingpools","standard_contract","standard_token_abi","governance_staking_contract","governance_staking_abi","governance_rewards_contract","governance_rewards_abi","yield_staking_contract","yieldstaking_abi","yield_unclaimed_bond_contract","yieldfarmtoken_bond_abi","yield_unclaimed_swingby_contract","yieldfarmtoken_swingby_abi","yield_unclaimed_xyz_contract","yieldfarmtoken_xyz_abi","Address","wallet","setWallet","governanceStaking","setGovernanceStaking","governanceUnclaimed","setGovernanceUnclaimed","farmingUnclaimed","setFarmingUnclaimed","addr","useParams","userMultiplier","userMultiplierGov","currentMultiplier","currentMultiplierGov","multiplier","pendingRewardsGov","total_pending_farm","totalDistributedAmount","numberOfEpochs","getEpochUserBalance","Number","console","log","height","width","Snowflakes","color","count","maxSize","start","ReactDOM","render","exact","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.d621fa8e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_light.5fb59b75.png\";","export default __webpack_public_path__ + \"static/media/logo_dark.0ca420e1.png\";","import {\n  Box,\n  Flex,\n  HStack,\n  Link,\n  useColorModeValue,\n  Input,\n  Badge,\n  Image,\n  useDisclosure,\n  IconButton,\n  Stack,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon } from \"@chakra-ui/icons\";\nimport lightLogo from \"./../logo_light.png\";\nimport darkLogo from \"./../logo_dark.png\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Header() {\n  const navigate = useNavigate();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [value, setValue] = useState(\"\");\n  return (\n    <>\n      <Box bg={useColorModeValue(\"gray.100\", \"gray.900\")} px={4}>\n        <Flex h={16} alignItems={\"center\"} justifyContent={\"space-between\"}>\n          <IconButton\n            size={\"md\"}\n            icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\n            aria-label={\"Open Menu\"}\n            display={{ md: \"none\" }}\n            onClick={isOpen ? onClose : onOpen}\n          />\n\n          <HStack alignItems={\"center\"}>\n            <Box w=\"2rem\">\n              <Image src={useColorModeValue(lightLogo, darkLogo)} alt=\"logo\" />\n            </Box>\n            <Box display={{ base: \"none\", md: \"flex\" }}>\n              StakeborgDAO Explorer\n            </Box>\n            <HStack\n              as={\"nav\"}\n              spacing={2}\n              display={{ base: \"none\", md: \"flex\" }}\n              px={8}\n            >\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                href={\"#/\"}\n              >\n                Home\n              </Link>\n\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                href={\"#/topholders\"}\n              >\n                Top Holders\n              </Link>\n\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                //href={\"/liquiditypools\"}\n              >\n                Liquidity Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n\n              <Link\n                px={2}\n                py={1}\n                rounded={\"md\"}\n                _hover={{\n                  textDecoration: \"none\",\n                  bg: useColorModeValue(\"gray.200\", \"gray.700\"),\n                }}\n                //href={\"/farmingpools\"}\n              >\n                Farming Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n            </HStack>\n          </HStack>\n\n          <HStack>\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                navigate(\"/address/\" + value);\n              }}\n            >\n              <Input\n                placeholder=\"0xdeadbeef\"\n                maxW=\"60rem\"\n                value={value}\n                onChange={(e) => {\n                  setValue(e.currentTarget.value);\n                }}\n              />\n              <button type=\"submit\"></button>\n            </form>\n          </HStack>\n        </Flex>\n        {isOpen ? (\n          <Box pb={4} display={{ md: \"none\" }}>\n            <Stack as={\"nav\"} spacing={4}>\n              <Link href={\"#/\"}>Home</Link>\n\n              <Link href={\"#/topholders\"}>Top Holders</Link>\n\n              <Link /* href={\"#/liquiditypools\"} */>\n                Liquidity Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n\n              <Link /* href={\"#/farmingpools\"} */>\n                Farming Pools <Badge colorScheme=\"green\">Coming soon</Badge>\n              </Link>\n            </Stack>\n          </Box>\n        ) : null}\n      </Box>\n    </>\n  );\n}\n","import {\n  Stat,\n  StatHelpText,\n  Image,\n  Center,\n  Box,\n  Button,\n  useColorMode,\n  Grid,\n  GridItem,\n  Text,\n} from \"@chakra-ui/react\";\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\nimport GitInfo from \"react-git-info/macro\";\n\nfunction Footer() {\n  const gitInfo = GitInfo();\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <Box\n      className=\"footer\"\n      as=\"footer\"\n      role=\"contentinfo\"\n      mx=\"auto\"\n      py=\"6\"\n      px={{ base: \"4\", md: \"8\" }}\n      minWidth=\"100vw\"\n    >\n      <Grid templateRows=\"repeat(2,auto)\" templateColumns=\"repeat(3,auto)\">\n        <GridItem row=\"1\" colSpan=\"3\">\n          <Text fontSize=\"sm\">0x7a3A59fC82ed8c2b1a4259f2DFA9a984527D8F04</Text>\n        </GridItem>\n        <GridItem row=\"2\" column=\"1\" alignSelf=\"end\" justifySelf=\"start\">\n          <Text fontSize=\"sm\">build : {gitInfo.commit.hash.slice(-6)}</Text>\n        </GridItem>\n        <GridItem row=\"2\" column=\"2\">\n          <Stat>\n            <StatHelpText fontSize=\"sm\">\n              Like this app? Consider supporting me at the address above. It\n              will help improve this app and build other apps for the\n              StakeborgDAO community.\n            </StatHelpText>\n\n            <Center>\n              <Image\n                boxSize=\"25px\"\n                src=\"https://assets.coingecko.com/coins/images/12559/small/coin-round-red.png?1604021818\"\n                alt=\"img\"\n              />\n              <Image\n                boxSize=\"30px\"\n                src=\"https://assets.coingecko.com/coins/images/279/small/ethereum.png?1595348880\"\n                alt=\"img\"\n              />\n              <Image\n                boxSize=\"25px\"\n                src=\"https://assets.coingecko.com/coins/images/4713/small/matic-token-icon.png?1624446912\"\n                alt=\"img\"\n              />\n            </Center>\n          </Stat>\n        </GridItem>\n        <GridItem row=\"2\" column=\"3\" alignSelf=\"end\" justifySelf=\"end\">\n          <Button onClick={toggleColorMode} maxW=\"3rem\">\n            {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n          </Button>\n        </GridItem>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Footer;\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatArrow,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function PriceCard() {\n  const [price, setPrice] = useState(0);\n  const [priceChange, setPriceChange] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setPrice(response[\"market_data\"][\"current_price\"][\"usd\"]);\n      setPriceChange(\n        response[\"market_data\"][\"price_change_percentage_1h_in_currency\"][\"usd\"]\n      );\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>Current Price</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(price)} $</StatNumber>\n          {priceChange > 0 ? (\n            <StatArrow type=\"increase\" />\n          ) : (\n            <StatArrow type=\"decrease\" />\n          )}\n          {new Intl.NumberFormat().format(priceChange)} %\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function VolumeCard() {\n  const [volume, setVolume] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setVolume(response[\"market_data\"][\"total_volume\"][\"usd\"]);\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>24 Hours Volume</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(volume)} $</StatNumber>\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatArrow,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function MarketcapCard() {\n  const [mkcap, setMkcap] = useState(0);\n  const [mkcapchange, setMkcapChange] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setMkcap(response[\"market_data\"][\"market_cap\"][\"usd\"]);\n      setMkcapChange(\n        response[\"market_data\"][\"market_cap_change_percentage_24h_in_currency\"][\n          \"usd\"\n        ]\n      );\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>Market Cap</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(mkcap)} $</StatNumber>\n          {mkcapchange > 0 ? (\n            <StatArrow type=\"increase\" />\n          ) : (\n            <StatArrow type=\"decrease\" />\n          )}\n          {new Intl.NumberFormat().format(mkcapchange)} %\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\n\nexport default function CirculatingCard() {\n  const [cirsupply, setCirsupply] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      let response = await (\n        await fetch(\n          \"https://api.coingecko.com/api/v3/coins/stakeborg-dao?market_data=true\"\n        )\n      ).json();\n      setCirsupply(response[\"market_data\"][\"circulating_supply\"]);\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>Circulating Supply</StatLabel>\n          <StatNumber>{new Intl.NumberFormat().format(cirsupply)}</StatNumber>\n          tokens\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatGroup,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport farms_contract_abi from \"./../../abi/farms.json\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(\n  new Web3.providers.HttpProvider(\n    \"https://mainnet.infura.io/v3/6a64571b9f134bc1913c6c24d5698891\"\n  )\n);\n\nconst farms_contract_address = \"0x7F4FE6776a9617847485d43db0d3A9b734e459C5\";\n\nconst BOND_contract_address = \"0x0391D2021f89DC339F60Fff84546EA23E337750f\";\nconst SWINGBY_contract_address = \"0x8287c7b963b405b7b8d467db9d79eec40625b13a\";\nconst XYZ_contract_address = \"0x618679df9efcd19694bb1daa8d00718eacfa2883\";\n\nconst farmsContract = new web3.eth.Contract(\n  farms_contract_abi,\n  farms_contract_address\n);\n\nexport default function FarmsTVLCard() {\n  const [bondTokens, setBondTokens] = useState(0);\n  const [swingbyTokens, setSwingbyToken] = useState(0);\n  const [xyzTokens, setXyzTokens] = useState(0);\n  const [epoch, setEpoch] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      const currentEpoch = await farmsContract.methods.getCurrentEpoch().call();\n\n      setEpoch(currentEpoch);\n\n      const bondAmount = await farmsContract.methods\n        .getEpochPoolSize(BOND_contract_address, currentEpoch)\n        .call();\n      const swingbyAmount = await farmsContract.methods\n        .getEpochPoolSize(SWINGBY_contract_address, currentEpoch)\n        .call();\n      const xyzAmount = await farmsContract.methods\n        .getEpochPoolSize(XYZ_contract_address, currentEpoch)\n        .call();\n\n      setBondTokens(bondAmount / 1000000000000000000);\n\n      setSwingbyToken(swingbyAmount / 1000000000000000000);\n\n      setXyzTokens(xyzAmount / 1000000000000000000);\n    }\n    fetchData();\n  }, []);\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <StatGroup>\n          <Stat p={4}>\n            <StatLabel>BOND</StatLabel>\n            <StatHelpText>epoch {epoch}</StatHelpText>\n            <StatNumber>\n              {new Intl.NumberFormat().format(bondTokens)}\n            </StatNumber>\n          </Stat>\n          <Stat p={4}>\n            <StatLabel>SWINGBY</StatLabel>\n            <StatHelpText>epoch {epoch}</StatHelpText>\n            <StatNumber>\n              {new Intl.NumberFormat().format(swingbyTokens)}\n            </StatNumber>\n          </Stat>\n          <Stat p={4}>\n            <StatLabel>XYZ </StatLabel>\n            <StatHelpText>epoch {epoch}</StatHelpText>\n            <StatNumber>{new Intl.NumberFormat().format(xyzTokens)}</StatNumber>\n          </Stat>\n        </StatGroup>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport usdc_contract_abi from \"./../../abi/usdc.json\";\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(\n  new Web3.providers.HttpProvider(\n    \"https://mainnet.infura.io/v3/6a64571b9f134bc1913c6c24d5698891\"\n  )\n);\n\nconst slp_contract_address = \"0xf1e34d19f63b69eaa70952f2f64f735849959833\";\nconst usdc_contract_address = \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\";\n\nconst usdcContract = new web3.eth.Contract(\n  usdc_contract_abi,\n  usdc_contract_address\n);\nexport default function LPTVLCard() {\n  const [tvlUsdcSLP, setTvlUsdcSLP] = useState(0);\n\n  useEffect(() => {\n    async function fetchData() {\n      const usdcVal = await usdcContract.methods\n        .balanceOf(slp_contract_address)\n        .call();\n      setTvlUsdcSLP((usdcVal / 1000000) * 2);\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <Box\n      h=\"full\"\n      borderWidth=\"1px\"\n      borderRadius=\"lg\"\n      bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n    >\n      <Box m=\"3\">\n        <Stat>\n          <StatLabel>USDC LP</StatLabel>\n          <StatHelpText>total locked value</StatHelpText>\n          <StatNumber>\n            {new Intl.NumberFormat().format(tvlUsdcSLP)} $\n          </StatNumber>\n        </Stat>\n      </Box>\n    </Box>\n  );\n}\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport PriceCard from \"../components/cards/pricecard\";\nimport VolumeCard from \"../components/cards/volumecard\";\nimport MarketcapCard from \"../components/cards/mkcapcard\";\nimport CirculatingCard from \"../components/cards/circulatingcard\";\nimport FarmsTVLCard from \"../components/cards/farmstvlcard\";\nimport LPTVLCard from \"../components/cards/lptvlcard\";\nimport { Box, Container, Grid, GridItem, Text } from \"@chakra-ui/react\";\n\nfunction Home() {\n  return (\n    <Box className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\" maxW=\"50rem\">\n        <Text fontSize=\"3xl\">Statistics for the $STANDARD token</Text>\n        <Grid\n          templateRows=\"repeat(4, auto)\"\n          templateColumns=\"repeat(2, 1fr)\"\n          alignItems=\"stretch\"\n          mt=\"2rem\"\n        >\n          <GridItem row={1} col={1} m=\"1\">\n            <PriceCard />\n          </GridItem>\n          <GridItem row={1} col={2} m=\"1\">\n            <VolumeCard />\n          </GridItem>\n          <GridItem row={2} col={1} m=\"1\">\n            <MarketcapCard />\n          </GridItem>\n          <GridItem row={2} col={2} m=\"1\">\n            <CirculatingCard />\n          </GridItem>\n          <GridItem row={3} colSpan={2} m=\"1\">\n            <FarmsTVLCard />\n          </GridItem>\n          <GridItem row={4} colSpan={2} m=\"1\">\n            <LPTVLCard />\n          </GridItem>\n        </Grid>\n      </Container>\n      <Footer />\n    </Box>\n  );\n}\n\nexport default Home;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport {\n  Table,\n  Tr,\n  Th,\n  Thead,\n  Tbody,\n  Td,\n  Container,\n  Box,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nfunction entry(\n  _address,\n  _wallet,\n  _govstaking,\n  _govunclaimed,\n  _farmunclaimed,\n  _airdropunclaimed,\n  _total\n) {\n  return (\n    <Tr>\n      <Td>{_address}</Td>\n      <Td isNumeric>{_wallet}</Td>\n      <Td isNumeric>{_govstaking}</Td>\n      <Td isNumeric>{_govunclaimed}</Td>\n      <Td isNumeric>{_farmunclaimed}</Td>\n      <Td isNumeric>{_airdropunclaimed}</Td>\n      <Td isNumeric>{_total}</Td>\n    </Tr>\n  );\n}\n\nfunction Topholders() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\" maxW=\"80rem\">\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n        >\n          <Box m=\"3\">\n            <Table variant=\"simple\">\n              <Thead>\n                <Tr>\n                  <Th>Address</Th>\n                  <Th isNumeric>Wallet</Th>\n                  <Th isNumeric>Governance staking</Th>\n                  <Th isNumeric>Governance unclaimed</Th>\n                  <Th isNumeric>Farming unclaimed</Th>\n                  <Th isNumeric>Airdrop unclaimed</Th>\n                  <Th isNumeric>Total</Th>\n                </Tr>\n              </Thead>\n              <Tbody>\n                {entry(\"0xdead\", 123, 123, 123, 123, 123, 123, 999)}\n                {entry(\"0xbeef\", 321, 321, 321, 321, 321, 321, 888)}\n              </Tbody>\n            </Table>\n          </Box>\n        </Box>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Topholders;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport { Container } from \"@chakra-ui/react\";\nfunction Liquiditypools() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\">Liquidity pools</Container>{\" \"}\n      <Footer />\n    </div>\n  );\n}\n\nexport default Liquiditypools;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport { Container } from \"@chakra-ui/react\";\n\nfunction Farmingpools() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\">Farming pools</Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Farmingpools;\n","import \"./../App.css\";\nimport Header from \"./../components/header\";\nimport Footer from \"./../components/footer\";\nimport {\n  Container,\n  Box,\n  useColorModeValue,\n  Stat,\n  StatLabel,\n  StatNumber,\n  StatHelpText,\n  Skeleton,\n  Center,\n} from \"@chakra-ui/react\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport standard_token_abi from \"./../abi/standard_token.json\";\nimport governance_staking_abi from \"./../abi/governance_staking.json\";\nimport governance_rewards_abi from \"./../abi/governance_rewards.json\";\nimport yieldfarmtoken_bond_abi from \"./../abi/yieldfarmtoken_bond.json\";\nimport yieldfarmtoken_swingby_abi from \"./../abi/yieldfarmtoken_swingby.json\";\nimport yieldfarmtoken_xyz_abi from \"./../abi/yieldfarmtoken_xyz.json\";\nimport yieldstaking_abi from \"./../abi/yieldstaking.json\";\n\nimport Web3 from \"web3\";\n\nconst web3 = new Web3(\n  new Web3.providers.HttpProvider(\n    \"https://mainnet.infura.io/v3/6a64571b9f134bc1913c6c24d5698891\"\n  )\n);\n\nconst standard_contract_address = \"0xda0c94c73d127ee191955fb46bacd7ff999b2bcd\";\n\nconst BOND_contract_address = \"0x0391D2021f89DC339F60Fff84546EA23E337750f\";\nconst SWINGBY_contract_address = \"0x8287c7b963b405b7b8d467db9d79eec40625b13a\";\nconst XYZ_contract_address = \"0x618679df9efcd19694bb1daa8d00718eacfa2883\";\n\nconst governance_staking_dao_contract_adress =\n  \"0xbA319F6F6AC8F45E556918A0C9ECDDE64335265C\";\nconst governance_rewards_contract_address =\n  \"0xF6b67E11A8B9844937700c0BAadC460DCD074802\";\n\nconst yield_staking_contract_address =\n  \"0x7f4fe6776a9617847485d43db0d3a9b734e459c5\";\n\nconst yield_farm_bond_contract_address =\n  \"0x2b31D07A2625a2fBAe68feed5a818ffc00dFB21b\";\n\nconst yield_farm_swingby_contract_address =\n  \"0xab0a722e5e8e6ea4299fe0cbed7f62c2a904267a\";\n\nconst yield_farm_xyz_contract_address =\n  \"0x2b89b42a95676dc74013ece6c07a760df5709c5c\";\n\nconst standard_contract = new web3.eth.Contract(\n  standard_token_abi,\n  standard_contract_address\n);\n\nconst governance_staking_contract = new web3.eth.Contract(\n  governance_staking_abi,\n  governance_staking_dao_contract_adress\n);\n\nconst governance_rewards_contract = new web3.eth.Contract(\n  governance_rewards_abi,\n  governance_rewards_contract_address\n);\n\nconst yield_staking_contract = new web3.eth.Contract(\n  yieldstaking_abi,\n  yield_staking_contract_address\n);\n\nconst yield_unclaimed_bond_contract = new web3.eth.Contract(\n  yieldfarmtoken_bond_abi,\n  yield_farm_bond_contract_address\n);\n\nconst yield_unclaimed_swingby_contract = new web3.eth.Contract(\n  yieldfarmtoken_swingby_abi,\n  yield_farm_swingby_contract_address\n);\n\nconst yield_unclaimed_xyz_contract = new web3.eth.Contract(\n  yieldfarmtoken_xyz_abi,\n  yield_farm_xyz_contract_address\n);\n\nfunction Address() {\n  const [wallet, setWallet] = useState(null);\n  const [governanceStaking, setGovernanceStaking] = useState(null);\n  const [governanceUnclaimed, setGovernanceUnclaimed] = useState(null);\n\n  const [farmingUnclaimed, setFarmingUnclaimed] = useState(null);\n\n  const { addr } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      setWallet(0);\n      setGovernanceStaking(0);\n      setGovernanceUnclaimed(0);\n      setFarmingUnclaimed(0);\n\n      setWallet(await standard_contract.methods.balanceOf(addr).call());\n      setGovernanceStaking(\n        await governance_staking_contract.methods.balanceOf(addr).call()\n      );\n\n      let userMultiplierGov = await governance_rewards_contract.methods\n        .userMultiplier(addr)\n        .call();\n\n      let currentMultiplierGov = await governance_rewards_contract.methods\n        .currentMultiplier()\n        .call();\n\n      let multiplier = currentMultiplierGov - userMultiplierGov;\n\n      let pendingRewardsGov =\n        (await governance_staking_contract.methods.balanceOf(addr).call()) *\n        multiplier;\n\n      setGovernanceUnclaimed(pendingRewardsGov);\n\n      let currentEpoch = await await yield_staking_contract.methods\n        .getCurrentEpoch()\n        .call();\n\n      let total_pending_farm = 0;\n\n      for (let epoch = 1; epoch <= currentEpoch; epoch++) {\n        let totalDistributedAmount =\n          await yield_unclaimed_bond_contract.methods.totalDistributedAmount\n            .call()\n            .call();\n\n        let numberOfEpochs =\n          await yield_unclaimed_bond_contract.methods.numberOfEpochs\n            .call()\n            .call();\n\n        let currentEpoch = epoch;\n\n        let getEpochUserBalance = await yield_staking_contract.methods\n          .getEpochUserBalance(addr, BOND_contract_address, currentEpoch)\n          .call();\n\n        let getEpochPoolSize = await yield_staking_contract.methods\n          .getEpochPoolSize(BOND_contract_address, currentEpoch)\n          .call();\n\n        total_pending_farm += Number(\n          ((totalDistributedAmount / numberOfEpochs) * getEpochUserBalance) /\n            getEpochPoolSize /\n            1000000000000000000\n        );\n\n        console.log(total_pending_farm);\n\n        console.log(\n          \"pending bond \" +\n            ((totalDistributedAmount / numberOfEpochs) * getEpochUserBalance) /\n              getEpochPoolSize /\n              1000000000000000000\n        );\n      }\n\n      for (let epoch = 1; epoch <= currentEpoch; epoch++) {\n        let totalDistributedAmount =\n          await yield_unclaimed_swingby_contract.methods.totalDistributedAmount\n            .call()\n            .call();\n\n        let numberOfEpochs =\n          await yield_unclaimed_swingby_contract.methods.numberOfEpochs\n            .call()\n            .call();\n\n        let currentEpoch = epoch;\n\n        let getEpochUserBalance = await yield_staking_contract.methods\n          .getEpochUserBalance(addr, SWINGBY_contract_address, currentEpoch)\n          .call();\n\n        let getEpochPoolSize = await yield_staking_contract.methods\n          .getEpochPoolSize(SWINGBY_contract_address, currentEpoch)\n          .call();\n\n        total_pending_farm += Number(\n          ((totalDistributedAmount / numberOfEpochs) * getEpochUserBalance) /\n            getEpochPoolSize /\n            1000000000000000000\n        );\n\n        console.log(total_pending_farm);\n\n        console.log(\n          \"pending swingby \" +\n            ((totalDistributedAmount / numberOfEpochs) * getEpochUserBalance) /\n              getEpochPoolSize /\n              1000000000000000000\n        );\n      }\n\n      for (let epoch = 1; epoch <= currentEpoch; epoch++) {\n        let totalDistributedAmount =\n          await yield_unclaimed_xyz_contract.methods.totalDistributedAmount\n            .call()\n            .call();\n\n        let numberOfEpochs =\n          await yield_unclaimed_xyz_contract.methods.numberOfEpochs\n            .call()\n            .call();\n\n        let currentEpoch = epoch;\n\n        let getEpochUserBalance = await yield_staking_contract.methods\n          .getEpochUserBalance(addr, XYZ_contract_address, currentEpoch)\n          .call();\n\n        let getEpochPoolSize = await yield_staking_contract.methods\n          .getEpochPoolSize(XYZ_contract_address, currentEpoch)\n          .call();\n\n        total_pending_farm += Number(\n          ((totalDistributedAmount / numberOfEpochs) * getEpochUserBalance) /\n            getEpochPoolSize /\n            1000000000000000000\n        );\n\n        console.log(total_pending_farm);\n\n        console.log(\n          \"pending xyz \" +\n            ((totalDistributedAmount / numberOfEpochs) * getEpochUserBalance) /\n              getEpochPoolSize /\n              1000000000000000000\n        );\n      }\n\n      setFarmingUnclaimed(total_pending_farm);\n    }\n    fetchData();\n  }, [addr]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Container className=\"pageContainer\" maxW=\"70vw\">\n        <Box\n          w=\"100%\"\n          borderWidth=\"1px\"\n          borderRadius=\"lg\"\n          bg={useColorModeValue(\"gray.50\", \"gray.900\")}\n        >\n          <Box m=\"3\">\n            <Stat>\n              <StatHelpText>Holdings of </StatHelpText>\n              <StatNumber>{addr}</StatNumber>\n              <StatLabel mt=\"2rem\">💳 Wallet 💳</StatLabel>\n              <StatNumber>\n                {wallet ? (\n                  new Intl.NumberFormat().format(wallet / 1000000000000000000)\n                ) : (\n                  <Center>\n                    <Skeleton height=\"25px\" width=\"20vw\" />\n                  </Center>\n                )}{\" \"}\n                STANDARD{\" \"}\n              </StatNumber>\n              <StatLabel mt=\"2\">⚖️ Governance staking ⚖️</StatLabel>\n              <StatNumber>\n                {governanceStaking ? (\n                  new Intl.NumberFormat().format(\n                    governanceStaking / 1000000000000000000\n                  )\n                ) : (\n                  <Center>\n                    <Skeleton height=\"25px\" width=\"20vw\" />\n                  </Center>\n                )}{\" \"}\n                STANDARD\n              </StatNumber>\n              <StatLabel mt=\"2\">\n                ⌛ ⚖️ Governance unclaimed rewards ⚖️ ⌛\n              </StatLabel>\n              <StatNumber>\n                {governanceUnclaimed ? (\n                  new Intl.NumberFormat().format(\n                    governanceUnclaimed / 1000000000000000000000000000000000000\n                  )\n                ) : (\n                  <Center>\n                    <Skeleton height=\"25px\" width=\"20vw\" />\n                  </Center>\n                )}{\" \"}\n                STANDARD\n              </StatNumber>\n              <StatLabel mt=\"2\">\n                ⌛ 🚜 Farming unclaimed rewards 🚜 ⌛\n              </StatLabel>\n              <StatNumber>\n                {farmingUnclaimed ? (\n                  new Intl.NumberFormat().format(farmingUnclaimed)\n                ) : (\n                  <Center>\n                    <Skeleton height=\"25px\" width=\"20vw\" />\n                  </Center>\n                )}{\" \"}\n                STANDARD\n              </StatNumber>\n              <StatLabel mt=\"2\">\n                ⌛ ✈️ Airdrop unclaimed rewards ✈️ ⌛\n              </StatLabel>\n              <StatNumber>123</StatNumber>\n              <StatLabel mt=\"2rem\">Total</StatLabel>\n              <StatNumber>123</StatNumber>\n            </Stat>\n          </Box>\n        </Box>\n      </Container>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Address;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Home from \"./pages/home\";\nimport Topholders from \"./pages/topholders\";\nimport Liquiditypools from \"./pages/liquiditypools\";\nimport Farmingpools from \"./pages/farmingpools\";\nimport Address from \"./pages/address\";\nimport { Routes, Route, HashRouter } from \"react-router-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport Snowflakes from \"magic-snowflakes\";\n//import SurpriseSanta from \"surprise-santa\";\n\nconst snowflakes = new Snowflakes({ color: \"#a4e1f4\", count: 10, maxSize: 15 });\n\nsnowflakes.start();\nReactDOM.render(\n  <ChakraProvider>\n    {/*  <SurpriseSanta minTime={15} maxTime={25} /> */}\n    <HashRouter>\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route path=\"/address/:addr\" element={<Address />} />\n        <Route path=\"/topholders\" element={<Topholders />} />\n        <Route path=\"/liquiditypools\" element={<Liquiditypools />} />\n        <Route path=\"/farmingpools\" element={<Farmingpools />} />\n      </Routes>\n    </HashRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}